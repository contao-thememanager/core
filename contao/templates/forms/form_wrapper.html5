<?php
  $this->attributes = str_contains($this->attributes, 'class="') ? str_replace('class="', 'class="grid gtr-f ', $this->attributes) : $this->attributes . 'class="grid gtr-f"';
?>

<!-- indexer::stop -->
<div class="<?= $this->class ?> block"<?= $this->cssID ?><?php if ($this->style): ?> style="<?= $this->style ?>"<?php endif; ?>>

  <?php if ($this->headline): ?>
    <<?= $this->hl ?>><?= $this->headline ?></<?= $this->hl ?>>
  <?php endif; ?>

  <?php if (!$this->message): ?>
    <form<?php if ($this->action): ?> action="<?= $this->action ?>"<?php endif; ?> method="<?= $this->method ?>" enctype="<?= $this->enctype ?>"<?= $this->attributes ?><?= $this->novalidate ?><?php if ($this->ajax): ?> data-ajax-form="<?= $this->id ?>"<?php endif; ?>>
      <div class="formbody inside">
        <?php if ($this->errors): ?>
          <?php foreach ($this->errors as $error): ?>
            <p class="error"><?= $error ?></p>
          <?php endforeach; ?>
        <?php endif; ?>
        <?php if ('get' != $this->method): ?>
          <input type="hidden" name="FORM_SUBMIT" value="<?= $this->formSubmit ?>">
          <input type="hidden" name="REQUEST_TOKEN" value="<?= $this->requestToken ?>">
          <?php if ($this->maxFileSize): ?>
            <input type="hidden" name="MAX_FILE_SIZE" value="<?= $this->maxFileSize ?>">
          <?php endif; ?>
        <?php endif; ?>
        <?= $this->hidden ?>
        <?= $this->fields ?>
      </div>
    </form>
  <?php else: ?>
    <div class="form-confirmation">
      <?= $this->message ?>
    </div>
  <?php endif; ?>

</div>
<!-- indexer::continue -->

<?php if ($this->ajax): ?>
  <script>
    window.addEventListener('DOMContentLoaded', () => {
      const el = document.querySelector('[data-ajax-form="<?= $this->id ?>"]');

      function request(form, body, callback) {
        const xhr = new XMLHttpRequest();
        xhr.open('POST', form.action, true);
        xhr.setRequestHeader('Accept', 'text/html');
        xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');
        xhr.setRequestHeader('X-Contao-Ajax-Form', form.querySelector('[name="FORM_SUBMIT"]').value);

        form.ariaBusy = 'true';
        form.dataset.ajaxForm = 'loading';

        xhr.onload = () => {
          form.dispatchEvent(new CustomEvent('ajax-form-onload', {
            bubbles: true,
            detail: { body, form, xhr },
          }));

          form.ariaBusy = 'false';
          form.dataset.ajaxForm = '';

          callback(xhr);
        };

        xhr.send(body || null)
      }

      function initForm(form) {
        form.addEventListener('submit', e => {
          e.preventDefault();

          const formData = new FormData(form);

          // Send the triggered button data as well
          if (e.submitter) {
              formData.append(e.submitter.name, e.submitter.value);
          }

          request(form, formData, xhr => {
            const location = xhr.getResponseHeader('X-Ajax-Location');

            // Handle the redirect header
            if (location) {
              window.location.href = location;
              return;
            }

            const template = document.createElement('template');
            template.innerHTML = xhr.responseText.trim();

            const newForm = template.content.firstElementChild;
            form.replaceWith(newForm);
            initForm(newForm);
          });
        });
      }

      initForm(el);
    });
  </script>
<?php endif; ?>
