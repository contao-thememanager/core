.grid {
  --v-gap:        var(--gtr-btm);
  --h-gap-off:    calc(-1 * var(--gtr-half));
  --flex-justify: normal;
  --flex-items:   normal;

  > .inside {
    --gtr-item: var(--gtr-half);

    position: relative;

    display: flex;
    flex: 0 1 auto;
    flex-wrap: wrap;
    flex-direction: row;

    justify-content: var(--flex-justify);
    align-items:     var(--flex-items);
    row-gap:         var(--v-gap);

    // Add padding-bottom for last row
    // padding-bottom:  var(--v-gap); // ToDo: In testing: should be removed if not needed.

    > * {
      flex-grow:   0;
      flex-shrink: 0;
      flex-basis:  100%;
      max-width:   100%;

      padding-right: var(--gtr-item);
      padding-left:  var(--gtr-item);
    }
  }

  // Negative margin to counter offset
  .grid > .inside {
    margin-left:  var(--h-gap-off);
    margin-right: var(--h-gap-off);
    padding-bottom: 0;
  }
}

$grid-breakpoints: map-merge((0:0),$breakpoints);

@each $breakpoint in map-keys($grid-breakpoints) {
  $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

  @include media-breakpoint($breakpoint, $grid-breakpoints) {

    .grid > .inside {

      @for $i from 1 through $grid-columns {
        > .col#{$infix}-#{$i} {
          flex-basis: shortPercentage($i / $grid-columns);
          max-width:  shortPercentage($i / $grid-columns);
        }
      }

      > .col#{$infix}-auto {
        flex-grow: 1;
        flex-basis: 0;
        max-width: 100%;
      }

      > .col#{$infix}-top      { align-self: flex-start }
      > .col#{$infix}-middle   { align-self: center }
      > .col#{$infix}-bottom   { align-self: flex-end}
      > .col#{$infix}-baseline { align-self: baseline }
      > .col#{$infix}-stretch  { align-self: stretch }
      > .order#{$infix}-first  { order: -1 }
      > .order#{$infix}-last   { order: $grid-columns + 1; }

      @for $i from 0 through $grid-columns {
        > .order#{$infix}-#{$i} { order: $i }
      }

      @for $i from 0 through ($grid-columns - 1) {
        @if not ($infix == "" and $i == 0) {
          > .offset#{$infix}-#{$i} {
            margin-left: shortPercentage($i / $grid-columns)
          }
        }
      }
    }
  }
}
