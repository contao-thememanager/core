.image_text {
  --ratio-x:auto; // Reset due to possible inheritance from parents

  &.item, .item {
    > .inside {
      position: relative;
      overflow: hidden;
      display:         var(--itm-dsp, block);
      flex-direction:  var(--itm-flow, column);
      justify-content: var(--itm-justify, normal);
      align-items:     var(--itm-align, normal);
    }
  }

  .c_image {
    --it-wdth:calc(100% * var(--ratio-x)); // No default value to force auto -> calc will intentionally fail
    position: relative;
    float:    var(--img-float,none);
    margin:   var(--img-mt,0) var(--img-mr,0) var(--img-mb,var(--e-m)) var(--img-ml,0);
    inset:    var(--inset-y,auto) var(--inset-x,auto);
    width:    var(--it-wdth);
    height:   var(--img-hght,auto);
  }

  .c_text {
    flex: 1;
    align-self: var(--self-align, auto);
  }
}

.txt--absolute {
  --img-mb:0;

  --itm-dsp: flex;
  --itm-flow: column;
  --itm-justify: center;
  --itm-align: center;

  &.pos-t { --itm-justify:flex-start; }
  &.pos-b { --itm-justify:flex-end; }
  &.pos-l { --itm-align:flex-start; }
  &.pos-r { --itm-align:flex-end; }

  .c_image { width: 100%; }

  .c_text {
    --it-wdth: calc(100% * var(--ratio-x));

    position: absolute;
    padding: var(--e-m);

    max-height: calc(100% - var(--i-py,0%) - var(--i-py,0%));
    width: calc(var(--it-wdth) - var(--i-px,0%) - var(--i-px,0%));

    overflow: hidden;
  }
}

.txt--hover {
  .c_text { opacity: 0; }
  &:hover { .c_text { opacity: 1; } }
}

.img--flex {
  --itm-dsp: flex;
  &.pos-b {
    --img-mt:var(--e-m); --img-mb:0; --itm-flow:column-reverse;
  }

  &.img--inset {
    &.pos-t { --inset-y:calc(-1 * var(--i-py,var(--py-1))); }
    &.pos-b { --inset-y:var(--i-py,var(--py-1)); }
    &.pos-y { --inset-x:calc(-1 * var(--i-px,var(--px-1))); --img-mt:0; --img-mb:0; }
  }
}

.img--inset {
  --img-mt:0; --img-mr:0; --img-mb:0; --img-ml:0;
  --ratio-x: 1; // Always set 100% as default value

  --inset-y:calc(-1 * var(--i-py,var(--py-1)));
  --inset-x:calc(-1 * var(--i-px,var(--px-1)));

  // Set width-ratio always to 100% / 1 when none is given (limitation due to inset)
  .c_image { width: calc(var(--it-wdth,100%) + calc(2 * var(--i-px,var(--px-1)) * var(--ratio-x,1))) !important; }
}

@media (max-width: sub($image-text-behaviour-min-width, .02px, 'px')) {

  .txt--absolute {
    --ratio-x: 1;
  }
}

@media (min-width: $image-text-behaviour-min-width) {

  @if type-of($image-text-ratio-options) == list {

    @each $ratio in $image-text-ratio-options {
      $value: '';

      @if ($ratio == 38) {
        $value: 0.38195; // golden cut
      } @else {
        $value: divide($ratio,100);
      }

      .it-width-#{$ratio} {--ratio-x:#{$value};}
    }
  }

  // Float only works with left and right
  .img--float {
    &.pos-l { --img-mr:var(--e-m); --img-float:left; }
    &.pos-r { --img-ml:var(--e-m); --img-float:right; }

    &.img--inset {
      &.pos-l { --img-mr:0; --inset-x:calc(-1 * var(--i-px,var(--px-1))); }
      &.pos-r { --img-ml:0; --inset-x:var(--i-px,var(--px-1)); }
      &.pos-x { --img-mb:0; --inset-y:calc(-1 * var(--i-py,var(--py-1))); }
    }

    &:after { display: block; content: ''; clear: both; }
  }

  .img--flex {
    --itm-dsp: flex;

    &.pos-b { --img-mt:var(--e-m); --img-mb:0; --itm-flow:column-reverse; }
    &.pos-y { --img-mr:auto; --img-ml:auto;} // Always 'default' to centered image when any top or btm position is set

    &.pos-l { --img-mr:var(--e-m); --itm-flow:row; }
    &.pos-r { --img-ml:var(--e-m); --itm-flow:row-reverse; }
    &.pos-x { --img-mt:auto; --img-mb:auto;
      &.pos-t { --img-mt:0; }
      &.pos-b { --img-mb:0; }
      .c_image { width: calc(var(--it-wdth) - calc(var(--e-m) / 2)); }
    }

    &.img--inset {
      &.pos-t { --inset-y:calc(-1 * var(--i-py,var(--py-1))); --img-mb:auto;}
      &.pos-b { --inset-y:var(--i-py,var(--py-1)); --img-mt:auto; }
      &.pos-y { --inset-x:calc(-1 * var(--i-px,var(--px-1)));
        &[class*=it-width-] { --inset-x: 0%; }
        &:not(.pos-x) { --img-mt:0; --img-mb:0; }
      }

      &.pos-l { --img-mr:0; --inset-x:calc(-1 * var(--i-px,var(--px-1))) !important; }
      &.pos-r { --img-ml:0; --inset-x:var(--i-px,var(--px-1)) !important; }
      &.pos-x {
        &.img--cover { --img-mt:0; --img-mb:calc(-2 * var(--i-py,var(--py-1))); }
      }
    }
  }

  .img--inset {
    --inset-y: auto;
    --img-mt:auto; --img-mb:auto;
  }

  .img--cover {
    &.pos-x {
      &.img--inset { --inset-y:calc(-1 * var(--i-py,var(--py-1))); }
      &.img--flex  { --img-mt:0; --img-mb:0; }
    }

    img,
    figure,
    picture {
      height: 100%;
    }

    img { object-fit: cover; }
  }
}
