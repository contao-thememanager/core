// Y-spacings (vertical top and bottom)
$spacings-list-init: (
       1: $article-spacing-xs-small, 2: $article-spacing-xs-medium, 3: $article-spacing-xs-large
);

$spacings-list-bp: (
  s:  (1: $article-spacing-s-small,  2: $article-spacing-s-medium,  3: $article-spacing-s-large),
  m:  (1: $article-spacing-m-small,  2: $article-spacing-m-medium,  3: $article-spacing-m-large),
  l:  (1: $article-spacing-l-small,  2: $article-spacing-l-medium,  3: $article-spacing-l-large),
  xl: (1: $article-spacing-xl-small, 2: $article-spacing-xl-medium, 3: $article-spacing-xl-large)
);

// Add default bottom-padding to #main articles
main .article_inside {
  padding-bottom: $article-main-spacing-bottom;
}

.grid > .article_inside {
  margin-left: 0;
  margin-right: 0;

  @at-root #{selector-append('.gtr-0', &)} {
    > .ce_wrapper {--gtr-x:var(--h-gap);} // Always reset gtr-0 within wrapper
    > .gtr-1      {--gtr-x:var(--gtr);} // Set normal gutter for gtr-1
  }
}

// Article overlaps
[class*=art-ol-self] + * > .inside { position: relative; z-index: 1; }
[class*=art-ol-next] > .inside     { position: relative; z-index: 1; }

.article_inside,
#container > .inside {
  padding-left:  calc(var(--art-px, 0px) + var(--art-ox, 0px));
  padding-right: calc(var(--art-px, 0px) + var(--art-ox, 0px));
}

.mod_article:not([class*=art-px]) {
  --art-ox:0px!important;
}

.gtr-1 {
  --art-px:#{divide($grid-gutter-width, 4)};
}

// Set outer padding for no gutter when x-spacing is set
.gtr-0[class*=art-px] {
  --art-px:#{divide($grid-gutter-width,2)};
}

:root {
  --art-ox:#{$article-outer-padding};
  --art-py-1:#{$article-spacing-xs-small};
  --art-py-2:#{$article-spacing-xs-medium};
  --art-py-3:#{$article-spacing-xs-large};
}

@each $size, $spacing in $spacings-list-init {
  .art-py-#{$size} {
    &, #container {
      > .inside {
        padding-top:    var(--art-py-#{$size});
        padding-bottom: var(--art-py-#{$size});
      }
    }
  }
}

@each $size, $spacing in $spacings-list-init {
  .art-pt-#{$size} > .inside { padding-top: var(--art-py-#{$size}); }
  .art-pb-#{$size} > .inside { padding-bottom: var(--art-py-#{$size}); }
  .art-ol-self-#{$size} {
    padding-bottom: var(--art-py-#{$size});
    + * { margin-bottom: calc(var(--art-py-#{$size}) * -1);
      > .inside { top: calc(var(--art-py-#{$size}) * -1);}
    }
  }
  .art-ol-next-#{$size} {
    margin-top: calc(var(--art-py-#{$size}) * -1);
    > .inside { top: var(--art-py-#{$size});}
    + * { padding-top: var(--art-py-#{$size});}
  }
}

@each $bp in map-keys($breakpoints) {
  $infix: breakpoint-infix($bp);
  $list: map-get($spacings-list-bp, $bp);
  @if ($bp == 'l') {
    $bp-l-gtr-none: sub(map-get($breakpoints,$bp),$grid-gutter-width,'px');
    @media (min-width:$bp-l-gtr-none) {
      .art-px-2 {--art-wdth:#{$bp-l-gtr-none};}
      .art-px-3 {--art-wdth:#{$x-spacing-large-l};}
      .mx-art {--art-mx:calc((max(var(--lvw,100lvw),#{$bp-l-gtr-none}) - #{$bp-l-gtr-none}) / 2);}
      .gtr-0 > .article_inside .mx-art {--art-mx:calc(((max(var(--lvw,100lvw),#{$bp-l-gtr-none}) - #{$bp-l-gtr-none}) / 2) + #{divide($grid-gutter-width,2)});}
      .ce_wrapper.grid:not(.gtr-0) > .mx-art {--art-mx:calc(((max(var(--lvw,100lvw),#{$bp-l-gtr-none}) - #{$bp-l-gtr-none}) / 2) - (var(--gtr-x) / 2));}
      .ml-art { margin-left:var(--art-mx)!important }
      .mr-art { margin-right:var(--art-mx)!important }
    }
  }
  @include media-breakpoint($bp) {
    @if ($bp == 'xs') {:root {--art-ox:#{$article-outer-padding-xs};}}
    @if map-has-key($spacings-list-bp, $bp) {
      :root {
        @if ($bp == 's') {--art-ox:#{$article-outer-padding-s};}
        @if ($bp == 'm') {--art-ox:0px;}
        @each $size, $spacing in $list {--art-py-#{$size}:#{$spacing};}
      }
    }
    @if ($bp == 'm') {
      .art-px-3 {--art-wdth:#{$x-spacing-large-m};}
      [class*=art-px] {
        &, #container {
          > .inside {
            max-width: var(--art-wdth, auto);
            margin-left: auto !important;
            margin-right: auto !important;
          }
        }
      }
    }
  }
}

@media (min-width: $x-spacing-small) {
  .art-px-1 {--art-wdth:#{$x-spacing-small};}
}
