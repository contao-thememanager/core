// Reset column grid inside widgets
.widget * {
  --col-amt:#{$grid-columns};
  --col-algn:auto;
  --col-off:0;
  --col-order:0;
}

%form-mandatory-styles {
  display: block;
  content: '*';

  position: absolute;
  top: 0;
  right: var(--mand-r,5px);

  font-size: 15px;
  color: var(--mand-clr,#{$form-input-mandatory-symbol-color});
  line-height: 1;
}

%form-error-styles {
  color: $form-input-color-error;
  background: $form-input-background-error;
  border-color: $form-input-border-color-error;
  --form-clr-ph: #{$form-input-placeholder-color-error};
}

::placeholder { color: var(--form-clr-ph); }

label,
legend {
  color: var(--form-clr-label);
  font-size: $form-label-font-size;
  margin-bottom: $form-label-spacing;
}

label {
  font-weight: $form-label-font-weight;
}

legend {
  width: 100%;
  font-weight: $form-legend-font-weight;
}

select {
  text-overflow: '';
  -webkit-appearance: none;
  -moz-appearance: none;
}

.multiselect {
  resize: vertical;
  height: $form-multiselect-height;
}

option {
  color: $form-select-option-color;
  background-color: $form-select-option-background;

  &[disabled] { color: $form-input-color-disabled; }
}

select,
input,
textarea {
  font-family: $form-input-font-family;
  font-weight: $form-input-font-weight;
  font-size: $form-input-font-size;

  color: var(--form-clr-txt);
  background-color: var(--form-clr-bg);

  border-color: var(--form-clr-border);
  border-width: $form-input-border-width;
  border-style: $form-input-border-style;
  border-radius: $form-input-border-radius;

  padding: $form-input-padding;
  outline: none;
  width: 100%;

  &:-webkit-autofill {
    -webkit-text-fill-color: $form-input-color;
    -webkit-box-shadow: 0 0 0 1000px rgba(255,255,255,0) inset;
    transition: background-color 5000s ease-in-out 0s;
  }

  &:hover {
    --form-clr-bg: #{$form-input-background-hover};
    --form-clr-border: #{$form-input-border-color-hover};
    --form-clr-ph: #{$form-input-placeholder-color-hover};
  }

  &:focus {
    --form-clr-bg: #{$form-input-background-focus};
    --form-clr-border: #{$form-input-border-color-focus};
    --form-clr-ph: #{$form-input-placeholder-color-hover};
  }

  .widget.error & {

    &:not(:valid) {
      @extend %form-error-styles;
    }
  }
}

select,
input {
  height: $form-input-height;
}

textarea {
  resize: vertical;
  line-height: $form-textarea-line-height;
}

// Select symbol
.select {

  .input-container {

    &:before {
      display: inline-block;
      content: $form-select-symbol;
      font-family: $form-select-symbol-font-family;

      position: absolute;
      bottom: #{divide(sub($form-input-height, $form-select-symbol-font-size, 'px'), 2)};
      right: 12px;

      font-size: $form-select-symbol-font-size;
      line-height: 1;
      text-decoration: inherit;
      text-transform: none;

      color: $form-select-symbol-color;

      pointer-events: none;
      speak: none;

      transform-origin: center;
      transition: transform .2s;
    }

    &:focus-within {

      &:before {
        transform: rotateZ(180deg);
      }
    }
  }
}

.widget {

  &,.input-container {
    position: relative;
  }

  // reset
  &-textarea,
  &-range {

    .input-container {
      font-size: 0;
    }
  }

  // states
  &.error {
    --mand-clr:#{$form-input-mandatory-symbol-color-error};

    p.error {
      color: $form-input-color-error;
      font-size: $form-input-font-size-error;
    }
  }

  &-checkbox,
  &-radio,
  &-range {
    --mand-r:#{sum(divide($grid-gutter-width, 4), 5px, 'px')};

    &.mandatory:after {
      @extend %form-mandatory-styles;
    }
  }

  &.mandatory {

    .input-container:after {
      top: 5px;
      @extend %form-mandatory-styles;
    }
  }

  &-range {

    .input-container:after {
      content: none !important;
    }

    input {
      height: inherit;
      padding: 0;
      margin: 0;
    }
  }

  &-upload {

    input {
      height: inherit;
    }
  }

  &-explanation {

    p {
      color: var(--form-clr-exp);
      font-size: $form-input-explanation-font-size;
    }
  }

  &-captcha {
    display: flex;
    flex-direction: column;

    > *           { order: 1; }
    .captcha_text { order: 2; }
    input         { order: 3; }
  }
}

// Form-validation
@if ($form-validation == 'Focus') {
  input,
  select,
  textarea {
    &:required:focus:invalid {
      @extend %form-error-styles;
    }
  }
}

@else if ($form-validation == 'Always') {
  input,
  select,
  textarea {
    &:required:invalid {
      @extend %form-error-styles;
    }
  }
}

// Checkbox & -radio styles

// Calculation for checkbox and radio offsets for pseudo or text element
$form-checkbox-radio-label-offset:  0;
$form-checkbox-radio-symbol-offset: 1px;
$form-checkbox-radio-label-min-height: $form-checkbox-radio-size;

@if ($form-checkbox-radio-auto-align == 'Active') {
  $font-min-height: multiply($form-checkbox-radio-label-font-size, $form-checkbox-radio-label-line-height);

  @if ($form-checkbox-radio-size < $font-min-height) {
    $form-checkbox-radio-symbol-offset: sub(divide(sub($font-min-height, $form-checkbox-radio-size), 2), 1px);
  }
  @else if ($form-checkbox-radio-size > $font-min-height) {
    $--calc-offset: sum(divide(sub($form-checkbox-radio-size, $font-min-height), 2), 1px);

    $form-checkbox-radio-symbol-offset: 0;
    $form-checkbox-radio-label-offset:  $--calc-offset;
  }
}

// Label toggle
.lbl-tgl {
  display: block;
  position: relative;
  z-index: 2;

  color: var(--cbx-clr-label);
  font-size: $form-checkbox-radio-label-font-size;
  line-height: $form-checkbox-radio-label-line-height;

  padding-top: $form-checkbox-radio-label-offset;
  // Calculate offset for the label
  padding-left: sum($form-checkbox-radio-size, 10px, 'px');
  margin-bottom: 0;
  min-height: $form-checkbox-radio-label-min-height;

  cursor: pointer;

  &:before {
    content: '';

    display: inline-flex;
    justify-content: center;
    align-items: center;

    font-family: $form-checkbox-radio-symbol-font-family;
    // Calculation: Do not allow font-sizes bigger than the width of the the checkbox
    $checkboxInnerWidth: sub($form-checkbox-radio-size, multiply($form-checkbox-radio-border-width, 2), 'px');
    font-size: minUnit($form-checkbox-radio-symbol-font-size, $checkboxInnerWidth, 'px');

    position: absolute;
    top: $form-checkbox-radio-symbol-offset;
    left: 0;

    color: var(--cbx-symbol-clr);

    width: $form-checkbox-radio-size;
    height: $form-checkbox-radio-size;

    border-width: $form-checkbox-radio-border-width;
    border-style: $form-checkbox-radio-border-style;
    border-color: var(--cbx-bdr-clr);
    border-radius: $form-checkbox-border-radius;

    background-color: var(--cbx-bg-clr);

    vertical-align: middle;
  }

  &:hover:before {
    border-color: var(--cbx-bdr-clr-hvr);
    background-color: var(--cbx-bg-clr-hvr);
  }
}

// Label border-radius
.lbr-50 {

  &:before {
    border-radius: 50%;
  }
}

// Checkbox radio toggle (Input)
.crt {
  position: absolute;
  opacity: 0;
  z-index: 1;
  width: 1px;

  &:checked + label {

    &:before {
      content: $form-checkbox-radio-symbol;
      border-color: $form-checkbox-radio-border-color-focus;
      background-color: $form-checkbox-radio-background-focus;
    }
  }
}

// Checkbox radio container
.crc {

  legend {
    padding: 0;
  }

  .mandatory & {

    label {
      padding-right: 15px;
    }
  }
}
