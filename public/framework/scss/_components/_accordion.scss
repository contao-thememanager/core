@mixin accordion-handle-icon {
  display: inline-flex;
  justify-content: center;
  align-items: center;

  font-family:    $accordion-icon-font-family;
  content:        var(--a-ico,'');
  line-height:    $accordion-icon-line-height;

  font-size:      $accordion-icon-font-size;
  font-weight:    $accordion-icon-font-weight;
  min-width:      $accordion-icon-width;
  height:         $accordion-icon-height;

  color:          var(--a-ico-clr);
  background:     var(--a-ico-bg);

  border:         $accordion-icon-border-width $accordion-icon-border-style var(--a-ico-clr-border);
  border-radius:  $accordion-icon-border-radius;
}

// Inner container for spacing and margin
.acc-content {

  > .inside {
    margin: $accordion-content-margin;
    padding: $accordion-content-padding;
  }

  // Accordion-start offset for inner elements
  $acc-c-m: standardize($accordion-content-margin);
  &.grid > .inside {
    --h-gap-off:calc(-1 * var(--i-gtr));
    margin: nth($acc-c-m, 1)
            calc(var(--h-gap-off,0) + #{nth($acc-c-m,2)})
            nth($acc-c-m,3)
            calc(var(--h-gap-off,0) + #{nth($acc-c-m,4)});
  }
}

.ctm-accordion {
  &-content { overflow: hidden; }
  &-handle {
    --a-ico:'#{$accordion-icon}';
    &.open {--a-ico:'#{$accordion-icon-active}';}

    display: flex;
    align-items: flex-start;
    column-gap: $accordion-icon-offset;

    margin-bottom: 0;
    cursor: pointer;

    @if $accordion-icon-side == left {
      &:before { @include accordion-handle-icon;}
    }
    @else if $accordion-icon-side == right {
      &:after { @include accordion-handle-icon;
        margin-left: auto;
      }
    }

    // Reset margin from any element within handle
    * { margin-bottom: 0; }
  }
}
