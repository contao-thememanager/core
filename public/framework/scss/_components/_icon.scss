.c_icon {
  text-align: inherit;
}

.icon {
  --ico-size: #{$icon-size-medium};
  --ico-bg:   transparent;
  --ico-clr:  inherit;

  display: inline-block;
  background-color: var(--ico-bg);
  color: var(--ico-clr);

  // Set same width and height according to icon-size
  line-height: 1;

  &:before {
    @include icon(attr(data-icon));
    font-size: var(--ico-size);
    height:    var(--ico-size);
    width:     var(--ico-size);
  }

  &.size {
    &--tiny  { --ico-size: #{$icon-size-tiny};}
    &--small { --ico-size: #{$icon-size-small};}
    &--large { --ico-size: #{$icon-size-large};}
    &--super { --ico-size: #{$icon-size-super};}
  }

  &.color {
    &-primary   { --ico-clr: var(--clr-primary); }
    &-secondary { --ico-clr: var(--clr-secondary); }
    &-dark      { --ico-clr: var(--text-clr-base); }
    &-light     { --ico-clr: var(--text-clr-invert); }
  }

  // Designs
  &.outline {
    padding: $icon-shape-spacing;
    // Do not use any color for box-shadow as it defaults to text-color anyways
    box-shadow: inset 0 0 0 $icon-outlined-width;
  }

  &.rounded {
    border-radius: 50%;
  }

  // Filled design
  &.filled {
    --ico-bg:  var(--text-clr-base);
    --ico-clr: var(--text-clr-invert);

    padding: $icon-shape-spacing;

    &.color {

      &-primary {
        --ico-bg:  var(--clr-primary);
        --ico-clr: var(--text-clr-invert);
      }

      &-secondary {
        --ico-bg:  var(--clr-secondary);
        --ico-clr: var(--text-clr-invert);
      }

      &-dark {
        --ico-bg:  var(--text-clr-base);
        --ico-clr: var(--text-clr-invert);
      }

      &-light {
        --ico-bg:  var(--text-clr-invert);
        --ico-clr: var(--text-clr-base);
      }
    }
  }
}

[class^="i-"],
[class*=" i-"] {

  &.i-is-r {
    flex-direction: row-reverse;

    &:before {
      padding: 0 0 0 0.3em;
    }
  }
}

a {
  &[class^="i-"],
  &[class*=" i-"] {
    display: inline-flex;
  }
}
