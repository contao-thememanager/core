//
// Provides typography mixins that are used by the framework
//
// @author Sebastian Zoglowek <https://github.com/zoglo>
//

@function get-heading-classlist($valuesOnly: true) {
  $headingsList: ();

  @for $i from 1 through 6 {
    $heading: '';

    @if $valuesOnly {
      $heading: ('h#{$i}','.h#{$i}');
    }
    @else {
      $heading: ($i: 'h#{$i},.h#{$i}');
    }

    $headingsList: join($headingsList, $heading);
  }

  @return $headingsList;
}

@mixin heading-basics {
  #{list-to-string(get-heading-classlist(), ',')} {
    @content;
  }
}

@mixin heading-typography($list, $disable-content-heading) {
  @each $k, $v in get-heading-classlist(false) {
    #{$v} {
      color: var(--h#{$k}-clr);
      font-size: var(--h#{$k}-fs);
      @each $class, $style in map-get(map-get($list, normal), $k) {
        #{$class}: $style;
      }
      @if ($disable-content-heading != 1) {
        #main & {
          color: var(--h#{$k}-c-clr);
          font-size: var(--h#{$k}-c-fs);
          @each $class, $style in map-get(map-get($list, content), $k) {
            #{$class}: $style;
          }
        }
      }
    }
  }
}
